# plsql
PSQL_USER=postgres
PSQL_USER_PASSWORD=root
PSQL_HOST=localhost
PSQL_PORT=5432
PSQL_DATABASE=test1

# server
SERVER_PORT=8000

# JWT
JWT_ACCESS_TOKEN_SECRET=4e7f373a54c90ddaf78007f926f621484af4d62f
JWT_REFRESH_TOKEN_SECRET=9601a2d28fa138ff7ca803a1eb98892bf7751152

# bcrypt
BCRYPT_SALT_ROUND=10

# database tables
DB_USERS_TABLE=`CREATE TABLE IF NOT EXISTS public.users
      (
          id uuid NOT NULL,
          name character varying(100) COLLATE pg_catalog."default" NOT NULL,
          email character varying(100) COLLATE pg_catalog."default" NOT NULL,
          password character varying(255) COLLATE pg_catalog."default" NOT NULL,
          refresh_token text COLLATE pg_catalog."default",
          CONSTRAINT users_pkey PRIMARY KEY (id),
          CONSTRAINT users_email_key UNIQUE (email)
      )`

DB_MESSAGES_TABLE=`CREATE TABLE IF NOT EXISTS public.messages
      (
          id uuid NOT NULL,
          sender_id uuid,
          receiver_id uuid,
          content text COLLATE pg_catalog."default" NOT NULL,
          "timestamp" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
          CONSTRAINT messages_pkey PRIMARY KEY (id),
          CONSTRAINT messages_receiver_id_fkey FOREIGN KEY (receiver_id)
              REFERENCES public.users (id) MATCH SIMPLE
              ON UPDATE NO ACTION
              ON DELETE NO ACTION,
          CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id)
              REFERENCES public.users (id) MATCH SIMPLE
              ON UPDATE NO ACTION
              ON DELETE NO ACTION
      )`

DB_LOGS_TABLE=`CREATE TABLE IF NOT EXISTS public.logs
      (
          id uuid NOT NULL,
          request_body json NOT NULL,
          "timestamp" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
          username character varying(100) COLLATE pg_catalog."default",
          ip_address character varying(45) COLLATE pg_catalog."default",
          CONSTRAINT logs_pkey PRIMARY KEY (id)
      )`